```python
# 0. Preliminaries
from cpmpy import *

def add_comparable_constraints(comparable_category_values, comparing_function, var1, var2):
    comparable_category_vars = list(comparable_category_values.keys())
    return [((e1 == var1) & (e2 == var2))
          .implies(comparing_function(comparable_category_values[e1], comparable_category_values[e2]))
          for e1 in comparable_category_vars for e2 in comparable_category_vars]

m = Model()

# 1. Variables (all variables that have the same integer value correspond to the same object)
banben, hatcha, kawa, rothvum = players = intvar(1, 4, shape=4)
_1976, _1979, _1982, _1985 = years = intvar(1, 4, shape=4)
center_back, center_forward, goalie, wing_back = positions = intvar(1, 4, shape=4)

# 2. Comparable values (helper dictionaries for comparisons)
years_values = {_1976: 1976, _1979: 1979, _1982: 1982, _1985: 1985} # in years

# 3. Constraints (all different per category and problem constraints)
m += AllDifferent(players)
m += AllDifferent(years)
m += AllDifferent(positions)

# Hatcha started 6 years after the wing back.
m += add_comparable_constraints(years_values, lambda var1, var2: var1 == var2 + 6, var1=hatcha, var2=wing_back)

# Kawa began playing in 1982.
m += (kawa == _1982)

# Banben was the center back.
m += (banben == center_back)

# The person who started in 1985 was either Kawa or the center forward.
m += Xor([_1985 == kawa, _1985 == center_forward])

# The end. You can take it from here.
```