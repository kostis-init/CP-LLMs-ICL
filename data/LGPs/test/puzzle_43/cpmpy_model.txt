```python
# 0. Preliminaries
from cpmpy import *

def add_comparable_constraints(comparable_category_values, comparing_function, var1, var2):
    comparable_category_vars = list(comparable_category_values.keys())
    return [((e1 == var1) & (e2 == var2))
          .implies(comparing_function(comparable_category_values[e1], comparable_category_values[e2]))
          for e1 in comparable_category_vars for e2 in comparable_category_vars]

m = Model()

# 1. Variables (all variables that have the same integer value correspond to the same object)
brandon, otis, phillip, rena = winners = intvar(1, 4, shape=4)
_45, _60, _75, _90 = prices = intvar(1, 4, shape=4)
peacock, peppered, swallowtail, torturix = butterflies = intvar(1, 4, shape=4)

# 2. Comparable values (helper dictionaries for comparisons)
prices_values = {_45: 45, _60: 60, _75: 75, _90: 90}  # in dollars

# 3. Constraints (all different per category and problem constraints)
m += AllDifferent(winners)
m += AllDifferent(prices)
m += AllDifferent(butterflies)

# The four butterflies were the swallowtail butterfly, Rena's purchase, the insect that sold for $90, and Phillip's purchase.
m += AllDifferent([swallowtail, rena, _90, phillip])

# Otis's purchase was either the peacock butterfly or the swallowtail butterfly.
m += Xor([otis == peacock, otis == swallowtail])

# Brandon's purchase cost 30 dollars less than Otis's purchase.
m += add_comparable_constraints(prices_values, lambda var1, var2: var1 == var2 - 30, var1=brandon, var2=otis)

# Rena's purchase cost 15 dollars less than the swallowtail butterfly.
m += add_comparable_constraints(prices_values, lambda var1, var2: var1 == var2 - 15, var1=rena, var2=swallowtail)

# The insect that sold for $75 was the torturix butterfly.
m += _75 == torturix

# The end. You can take it from here.
```