```python
# 0. Preliminaries
from cpmpy import *

def add_comparable_constraints(comparable_category_values, comparing_function, var1, var2):
    comparable_category_vars = list(comparable_category_values.keys())
    return [((e1 == var1) & (e2 == var2))
          .implies(comparing_function(comparable_category_values[e1], comparable_category_values[e2]))
          for e1 in comparable_category_vars for e2 in comparable_category_vars]

m = Model()

# 1. Variables (all variables that have the same integer value correspond to the same object)
ethel_street, fred_lane, juniper_lane, quince_street = streets = intvar(1, 4, shape=4)
al_anderson, cal_craft, ed_erickson, hal_hamilton = managers = intvar(1, 4, shape=4)
april, may, june, july = months = intvar(1, 4, shape=4)

# 2. Comparable values (helper dictionaries for comparisons)
months_values = {april: 4, may: 5, june: 6, july: 7} # month values

# 3. Constraints (all different per category and problem constraints)
m += AllDifferent(streets)
m += AllDifferent(managers)
m += AllDifferent(months)

# The Ethel Street project begins 1 month after Cal Craft's project.
m += add_comparable_constraints(months_values, lambda var1, var2: var1 == var2 + 1, var1=ethel_street, var2=cal_craft)

# The job starting in May will be headed by Ed Erickson.
m += may == ed_erickson

# The Juniper Lane project starts in April.
m += juniper_lane == april

# Al Anderson's project begins 2 months before the Fred Lane project.
m += add_comparable_constraints(months_values, lambda var1, var2: var1 == var2 - 2, var1=al_anderson, var2=fred_lane)

# The end. You can take it from here.
```